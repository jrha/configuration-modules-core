# ${license-info}
# ${developer-info}
# ${author-info}


use utf8;

=pod

=head1 NAME

ncm-networkupstools - Component that configures nut: the Network UPS
Tools.

=head1 SYNOPSIS

This NCM component configures the various aspects of the Network UPS
Tools. It has been tested only for locally connected APC UPSs, so
feedback is appreciated

=head1 BASIC COMPONENT STRUCTURE

All paths are relative to C</software/components/networkupstools>. Most fields
are similar in name and structure to the expected lines on /etc/ups/
files.

=over

=item * C<upss>

Named list of UPS definitions. It is indexed by UPS name. Each UPS
definition consists of:

=over

=item * driver : string

Driver name, for instance C<apcsmart> or C<snmp-ups>

=item * port : string

Device attached to the UPS. If it's attached to a serial port,
/dev/ttyS0, if it's attached to a USB port you may try "auto". If it's
controlled via SNMP, place here the network name of the UPS.

=item * cable ? string

Cable model. This is supported by the APC driver and perhaps others.

=item * sdorder ? long

Order for the UPSs to be shut down.

=item * upsconfig

List of settings to be sent to the UPS to change its internal
configuration. This invokes upcmd. Each of these settings is composed
of username and password and a string of the form C<setting=value>.

=item * snmpcfg

SNMP settings. These can be the MIBs (which default to "auto"), the
community and the polling frequency. The last two are optional.

=back

=item * users : string

Internal NUT users. It is indexed by user name. The fields are:

=over

=item * password string:

Obvious, isn't it?

=item * allowfrom : string

Host from which the user can authenticate himself.

=item * actions : string[]

List of actions the user can perform. These can be either C<SET>,
C<FSD> or both.

=item * instcmds[]

Commands allowed to the user. Usually, a list containing "ALL".

=item * upsmon ? string

Either master or slave.

=back

=item * upsd

UPS daemon configuration. Includes what hosts are allowed to connect
to check this UPS. It has the following fields:

=over

=item * acls

List of ACLs, indexed by ACL name. An ACL is a structure with the
following fields:

=over

=item * nework : string

A IP/mask string, like 192.168.0.0/24.

=item * accept : boolean

Whether to accept or not connections from this network.

=back

=item * maxage ? long

=item * listen ? address

An structure made of IP and port to listen for connections.

=back

=item * upsmon

UPS monitoring settings

=over

=item * user : string

System user the daemon will run as. Defaults to "nut".

=item * rbwarn : long

Replace battery alarm time

=item * nocommwarn : long

Time to wait before sending an alarm if the communication with the UPS
gets lost.

=item * shutdown : string

Command to run for shutting the system down.

=item * powerdownflag : string

File that signals the shutdown is forced by UPS. If you have any
scripts to run on UPS shutdown, they should check the existence of
this file.

=item * notifymsgs

Custom messages on different events: C<online>, C<onbatt>,
C<lowbatt>, C<fsd>, C<commok>, C<commbad>, C<shutdown>, C<replbatt>,
C<nocomm>

=item * notifyflags

Actions to be performed on event. For each event, any combination of
WALL, SYSLOG, EXEC or IGNORE is allowed.


=back

=item * upssched

Fine-grained actions to be performed on events

=over

=item * cmdscript

Script to be run on selected events. Only one script for all events is
allowed. The event name is passed as an argument.

=item * pipe

Pipe for comunication between UPS daemons, upssched and the
C<cmdscript>

=item * lock

Lock file. Must be placed where nut user can write.

=item * handlers

List of event handlers. These handlers will delay or modify the
execution of the C<cmdscript>, depending on the event.

=over

=item * condition

The event that triggers this handler

=item * ups

The UPS that triggers this handler. The handler will run only if this
UPS produces the above event. Use "*" if all UPSs must trigger this
event handler.

=item * action

One of C<START-TIMER>, C<CANCEL-TIMER> or C<EXECUTE>

=item * timername

If the action is C<START-TIMER> or C<CANCEL-TIMER>, the name of the
timer. This name will be the first argument to the C<cmdscript>.

=item * actionarguments

Arguments for this handler. If a timer was started, the time in
seconds.

=back

=back

=back

=head1 SEE ALSO

L<http://eu1.networkupstools.org/>, L</usr/share/doc/nut-<vers>/docs>

=head1 AUTHOR

Luis Fernando Muñoz Mejías, <mejias@delta.ft.uam.es>

=cut

