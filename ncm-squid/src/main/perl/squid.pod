# ${license-info}
# ${developer-info}
# ${author-info}


=head1 NAME

F<NCM::squid> - NCM configuration component for Squid 2.x

=head1 DESCRIPTION

This component configures the Squid proxy-caching daemon. It provides a minimal
set of options to install a forward/reverse cache. Reverse caching is also
referred to as "accelerator mode".


=head1 SYNOPSIS

=over

=item Configure()

On its first run, it takes the default Squid's configuration file as a template,
then modifies, checks and installs it as
F</etc/squid/squid.conf>,
making a back-up of the original, if any. Then the Squid daemon is started.

On subsequent runs, modifications are made starting from the current
configuration. If swap (i.e., cache directory) definitions change, unused
directories are deleted and new ones are created and initialized.
Last, the Squid daemon is re-loaded/started only if something changed. No
back-up is made (use I<Unconfigure()> to restore the original configuration).

=item Unconfigure()

Restores the Squid state existing before the first component run, that is,
the configuration file, the swap directory structure and the running state.

=back


=head1 RESOURCES

There are three directive groups: B<basic>, B<size> and B<multi>. Basic
directives are simple two-token options which should appear only once.
Size directives affect the cache size and should appear only once: these are
two-token-based, but a third token "KB" (specifying the size unit)
will be automatically added.
Multi directives may appear more than once, and are usually composed of a
variable number of tokens.

Here follow the most important directives. See the template files in
F</usr/share/doc/pan-templates/namespaces/components/> for a complete list. Directive names (their first token)
are the same as those found in the default Squid's configuration file.

The default values, if any, refer to the Squid's defaults.

=head2 Basic configuration directives (optional)

=over

=item /software/components/squid/basic/http_port : long

Port number which the Squid daemon should listen to (default is 3128).

=item /software/components/squid/basic/httpd_accel_host : string

For accelerator mode: Host name of the back-end Web server. B<Warning:> Only one
server is supported!

=item /software/components/squid/basic/httpd_accel_port : long

For accelerator mode: Listening port of the back-end Web server (default is 80).

=item /software/components/squid/basic/httpd_accel_single_host : string

For accelerator mode: Force single back-end support (default is "off").
Set this to "on" if your Squid is doing reverse caching!

=item /software/components/squid/basic/ignore_unknown_nameservers : string

Set this to "on" if you have a load-balanced DNS which provides different
server names (default is "off").

=item /software/components/squid/basic/log_fqdn : string

Enable logging of FQDNs in F<access.log> (default is "off").

=item /software/components/squid/basic/negative_dns_ttl : string

TTL in seconds|minutes|hours|days for caching failed DNS queries (default
60 seconds). E.g.

    "/software/components/squid/basic/negative_dns_ttl" = "10 minutes";

=item /software/components/squid/basic/redirect_rewrites_host_header : string

Force "Host :" header rewriting for redirected requests (default is "on").
Set this to "off" if your Squid is doing reverse caching!

=back

=head2 Size configuration directives (optional)

All values are in KB.

=over

=item /software/components/squid/size/cache_mem : long

Ideally maximum amount of RAM used for main memory caching (default is 8192).

=item /software/components/squid/size/maximum_object_size : long

Maximum size of a disk-cacheable object (default is 4096).

=item /software/components/squid/size/maximum_object_size_in_memory : long

Maximum size of a RAM-cacheable object (default is 8).

=back


=head2 Multi configuration directives

B<Warning!> This general schema is not yet fully supported, since
context-dependant placement is needed for some directives. In order to avoid
problems, define only B<one> directive per type.

=over

=item /software/components/squid/multi/cache_dir : list

List of <type, directory, MBsize, level1, level2> tuples defining the swap
directory structure (optional). The default is equivalent to:

"/software/components/squid/multi/cache_dir" = list(
    nlist(  "type", "ufs",
            "directory", "/var/spool/squid",
            "MBsize", 100,
            "level1", 16,
            "level2", 256)
);

=item /software/components/squid/multi/dns_nameservers : list

List of IP adresses for the DNS servers which will override those provided
by F</etc/resolv.conf> (optional).

=item /software/components/squid/multi/acl : list

List of <name, type, targets:list> tuples defining access control lists. You
need to define at least one ACL for your network access, as in:

"/software/components/squid/multi/acl" = list(
    nlist(  "name", "our_networks",
            "type", "src",
            "targets", list(   "<net1-address>/<net1-mask>",
                               "<net2-address>/<net2-mask>",
                               ...))
);

=item /software/components/squid/multi/http_access : list

List of <policy, acls:list> tuples defining who is [dis]allowed to connect via
HTTP. You need to define at least one directive for your network access, as in:

"/software/components/squid/multi/http_access" = list(
    nlist(  "policy", "allow",
            "acls", list("our_networks"))
);

Of course, the corresponding ACL "our_networks" must be defined. B<Warning:>
To date there is no support for "acl" and "http_access" directives other than
for the "our_networks" definition!

=item /software/components/squid/multi/refresh_pattern : list

List of <pattern, min, percent, max> tuples defining how certain cached objects
should be refreshed.

=back

=head1 DEPENDENCIES

=head2 Components to be run before:

none.

=head2 Components to be run after:

none.

=head1 FILES

=over

=item F</etc/squid/squid.conf>

The Squid's configuration file.

=back


=head1 BUGS

Many of Squid's configuration directives are context-dependant, but currently
there is no easy way to manage them with available LC/NCM API functions. As a
result, B<there is no guarantee of correct placement> for some directives in
the 'multi' class such as: I<cache_dir>, I<acl> and I<http_access>.

=head1 NOTES ON EXTENDING THIS COMPONENT

The framework of squid has been developed to allow a fair level of flexibility.
Any "basic" directive and any "multi" directive, composed of just a list of values,
can be added to the F<TPL/schema.tpl>: they should work woithout requiring
any change to the code, provided they are context independent. Warning! Bogus
directives might sneak in the resulting configuration file without any check, though
Squid should tell you something.

=head1 AUTHOR

Marco Emilio Poleggi <Marco.Poleggi@cern.ch>

=head1 SEE ALSO

L<ncm-ncd(1)> man page and Squid 2.x's documentation at
L<http://squid.visolve.com/squid/configuration_manual_24.htm>.

=cut
